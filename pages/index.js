import Head from 'next/head'
import { useState, useRef, useContext } from 'react'
import { MainContext } from '../context'
import BigNumber from 'bignumber.js'

export default function Home() {
  const [selectedFile, setSelectedFile] = useState();
  const [img, setImg] = useState();
  const [URI, setURI] = useState();
  const [amount, setAmount] = useState();
  const [loading, setLoading] = useState(false)

  const [transactionId, setTransactionId] = useState('');
  const {
    initialize, getBalance, balance, bundlrInst
  } = useContext(MainContext);

  const uploadImage = async () => {
    setLoading(true)
    let txn = await bundlrInst.uploader.upload(selectedFile, [{ name: "Content-Type", value: "image/png" }])
    setURI(`http://arweave.net/${txn.data.id}`);
    setLoading(false)
  }

  async function readFromArweave() {
    /* read Arweave data using any trsnsaction ID */
    // console.log(transactionId)
    arweave.transactions
      .getData(transactionId, {
        decode: true,
        string: true,
      })
      .then((data) => {
        console.log('data: ', data)
      })
  }

  const handleFileChange = (e) => {
    const reader = new FileReader();
    const file = e.target.files[0]
    if (file) {
      reader.onloadend = () => {
        if (reader.result) {
          setSelectedFile(Buffer.from(reader.result))
        }
      };
      reader.readAsArrayBuffer(file);
      const objectUrl = URL.createObjectURL(file)
      setImg(objectUrl)
    }
  }

  const fundWallet = async () => {
    if (!amount) return;
    const parseAmount = parseInput(amount);
    let response = await bundlrInst.fund(parseAmount);
    console.log('wallet funded: ', response);
    getBalance()
  }

  const parseInput = (input) => {
    const conversion = new BigNumber(input).multipliedBy(bundlrInst.currencyConfig.base[1])
    if (conversion.isLessThan(1)) {
      console.log('error: value too small')
      return
    } else {
      return conversion
    }
  }

  return (
    <div>
      <Head>
        <title>Arweave/Bundlr</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>
        {!balance && <button onClick={initialize}>Initialize</button>}
        {balance && (
          <>
            <p>balance: {balance}</p>
            <input placeholder='add funds'
              onChange={(e) => setAmount(e.target.value)} />
            <button onClick={fundWallet}>fund</button>
          </>
        )
        }
        <div style={{ paddingTop: '10em' }}>
          <input
            type='file'
            onChange={handleFileChange}
          />
          {
            selectedFile &&
            <button style={button} onClick={uploadImage}>
              Create Transaction
            </button>
          }
          {
            transactionId &&
            <button style={button} onClick={readFromArweave}>
              Read Transaction
            </button>
          }
        </div>
        {img &&
          <div style={previewFlex}>
            <div style={previewStyle}>
              <h3>Our File</h3>
              {img && (
                <div>
                  <img src={img} />
                </div>
              )
              }
            </div>
            <div style={previewStyle}>
              <h3>Arweave File</h3>
              {loading && <p style={loadingStyle}>...uploading file</p>}
              {URI && (
                <>
                  <img src={URI} />
                  <a href={URI} target="_blank">{URI}</a>
                </>
              )
              }
            </div>
          </div>}
      </main>
    </div>
  )
}
const previewStyle = {
  width: '25em',
  height: 'auto',
  margin: '0 auto'
}

const loadingStyle = {
  paddingTop: '10em'
}

const previewFlex = {
  display: 'flex',
}

const button = {
  outline: 'none',
  border: '1px solid black',
  backgroundColor: 'white',
  padding: '10px',
  width: '200px',
  marginBottom: 10,
  cursor: 'pointer',
}
